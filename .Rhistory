nrow(mydata)
head(mydata$sulfate)
head(mydata$nitrate)
head(mydata$id)
head(mydata)
head(mydata$ID)
head(mydata$Date)
mean(mydata$sulfate)
mean(mydata$sulfate, na.rm = TRUE)
class(mydata)
class(mydata$sulfate)
sulfname <- "sulfate"
mean(mydata$sulfname, na.rm = TRUE)
mean(mydata.sulfname, na.rm = TRUE)
mydata[, sulfname]
mean(mydata[, sulfname])
mean(mydata[, sulfname], na.rm = TRUE)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate")
source("submitscript1.R")
submit()
submit()
submit()
submit()
mydata <- read.csv("specdata/001.csv")
count.fields(mydata)
nrow(mydata)
?nrow
newdata() <- data.frame()
newdata <- data.frame()
names(newdata) <- c("firstcol", "secondcol")
newdata <- data.frame(2,0)
newdata
newdata <- data.frame()
newdata
ncol(newdata) <- 2
newdata <-  data.frame(id = numeric(0), nobs = numeric(0))
newdata
newdata <- rbind(newdata, data.frame(1,4))
newdata
newdata <- rbind(newdata, data.frame(1,4))
newdata
newdata <-  data.frame(id = numeric(0), nobs = numeric(0))
newdata
newdata[1,] <- c(1,4)
newdata
newdata[2,] <- c(2,400)
newdata
?complete.cases
na.omit(mydata)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
submit()
submit()
submit()
?cor
c <- c()
c[1] <- "a"
c[2] <- "e"
c
c[9] <- "w"
c
head(mydata)
head(mydata$sulfate)
head(na.omit(mydata))
head(na.omit(mydata)$sulfate)
head(na.omit(mydata)$nitrate)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
filleddata <- na.omit(mydata)
nrow(filleddata)
cor(filleddata$sulfate, filleddata$nitrate)
cr <- corr("specdata", 400)
head(cr)
cls
clear
corr <- function (directory, threshold = 0) {
filevector <- getfilevector(directory, 1:332)
correlationdata <- c()
for (i in 1:length(filevector)) {
filedata <- read.csv(filevector[i])
filledrows <- na.omit(filedata)
sulfatedata <- c()
nitratedata <- c()
if (nrow(filledrows) > threshold) {
correlationdata[i] <- cor(filledrows$sulfate, filledrows$nitrate)
}
}
correlationdata
}
getfilevector <- function (directory, id) {
filevector <- c()
for (i in 1:length(id)) {
if (id[i] < 10) { fileprefix <- "00"}
else if (id[i] >= 10 & id[i] < 100) { fileprefix <- "0"}
else { fileprefix <- ""}
filevector[i] = paste(directory, "/", fileprefix, as.character(id[i]), ".csv", sep = "")
}
filevector
}
corr("specdata", 1000)
corr("specdata", 4000)
corr("specdata", 3000)
corr("specdata", 2500)
corr("specdata", 2000)
corr("specdata", 1900)
corr("specdata", 1800)
corr("specdata", 1700)
corr("specdata", 1600)
corr("specdata", 1500)
corr("specdata", 1400)
corr("specdata", 1300)
corr("specdata", 1200)
corr("specdata", 1100)
corr("specdata", 1000)
getfilevector <- function (directory, id) {
filevector <- c()
for (i in 1:length(id)) {
if (id[i] < 10) { fileprefix <- "00"}
else if (id[i] >= 10 & id[i] < 100) { fileprefix <- "0"}
else { fileprefix <- ""}
filevector[i] = paste(directory, "/", fileprefix, as.character(id[i]), ".csv", sep = "")
}
filevector
}
filevector <- getfilevector("specdata", 1:332)
for (i in 1:length(filevector)) {
filedata <- read.csv(filevector[i])
filledrows <- na.omit(filedata)
if (nrow(filledrows) > 1000) {
print(filevector[i])
}
}
x <- 3
`+`(x) <- 1
+(x) <- 1
'+'(x) <- 1
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
submit()
submit()
submit()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(5)
set(3)
setmean(5)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector()
makeVector(10)
vectormade <- makeVector(10)
vec
vectormade
vectormade$set
vectormade$set(5)
vectormade$get()
vectormade$set(c(5,10,12,15))
vectormade$get()
vectormade$getmean()
vectormade$setmean(10)
vectormade$getmean()
help ("<<-")
?"<-"
?"<<-"
?assignOps
make.accumulator<-function(){
a<-0
function(x) {
a<<-a+x
a
}
}
f <- make.accumulator()
f(1)
f(1)
f(1)
f(1)
f(1)
f(5)
f(5)
f(5)
f(f(f(3)))
f(1)
make.accumulator<-function(){
a<-0
function(x) {
a<<-a+x
a
}
}
f(0)
make.accumulator<-function(){
b<-0
function(x) {
b<<-b+x
b
}
}
f <- make.accumulator()
f(0)
f(f(1))
f(1)
f(f(1))
library(fortunes)
install.packages('fortunes')
library(fortunes)
fortunes("<<-")
fortune("<<-")
fortune("<<-")
fortune("<<-")
fortune("<-")
fortune("cor")
a <- 0
f(1)
b <- 0
f(1)
f <- make.accumulator
f
fortune("This is R")
fortune(161)
fortune(16)
fortune(1)
fortune(6)
fortune(61)
fortune(611)
fortune(116)
fortune(900)
fortune(200)
fortune(300)
fortune(400)
fortune(350)
fortune(375)
fortune(360)
fortune(365)
fortune(363)
fortune(361)
fortune(360)
fortune(2)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
svector <- makeVector()
svector$set(c(1,2,3,4,5,6,7,8,9,10))
svector$get()
cachemean()
cachemean(x)
cachemean(svector)
svector$getmean
svector$getmean()
ssvector <- makeVector()
ssvector$set(c(5,6,7))
ssvector$getmean()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
cachemean(x)
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
supervector <- makeVector(c(10,20,30))
supervector$get()
supervector$getmean()
supervector$set(c(10,20,30))
supervector <- makeVector()
supervector$get()
supervector$set(c(10,20,30))
q()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
vone <- makeVector()
vone$set(c(1,2))
cachemean(vone)
vone$getmean()
vone$set(c(1,3))
vone$getmean()
cachemean(vone)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
# m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
vtwo <- makeVector()
vtwo$set(c(1,2))
cachemean(vtwo)
vtwo$getmean()
vtwo$set(c(1,3))
vtwo$get()
vtwo$getmean()
cachemean(vtwo)
cachemean(vtwo)
cachemean(vtwo)
cachemean(vtwo)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
# m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
#        if(!is.null(m)) {
#                message("getting cached data")
#                return(m)
#        }
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
v3 <- makeVector()
v3$set(c(1,2))
cachemean(v3)
v3$getmean()
v3$set(c(1,3))
cachemean(v3)
v3$getmean()
setwd("C:/SkyDrive/rprog/ProgrammingAssignment2")
fortune(1)
library(fortunes)
fortune(1)
fortune("solve")
?solve
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
# m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
#        if(!is.null(m)) {
#                message("getting cached data")
#                return(m)
#        }
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
v1
v1 <- makeVector()
v1$set(c(4,5,6))
cachemean(v1)
cachemean(v1)
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(v1)
x <- c(1,2,3,4)
dim(x) <- c(2,2)
x
x
solve(x)
x*solve(x)
y <- solve(x)
x*y
x <- c(4,3,3,2)
dim(x) <- c(2,2)
x
solve(x)
y <- solve(x)
xy
x*y
x%%y
quit()
